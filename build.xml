<project name = "PreliminaryProgrammingProject" default = "build">
    <!-- The path to the sources (non-test units.-->
    <property name = "source.dir" location = "src"/>
    <!-- The path to the test units.-->
    <property name = "test.dir" location = "test"/>
    <!-- The path to the compiled classes.-->
    <property name = "build.dir" location = "build"/>
    <!-- The path to the comiled classes with debugging symbols. -->
    <property name = "target.dir"
     location = "${build.dir}/debug/classes"/>
    <!-- The path to the documentation.-->
    <property name = "doc.dir" location = "doc"/>
    <!-- The zip file name.-->
    <property name = "zip.file" value = "prelim.zip"/>
    <!-- The name of the environment properties file.-->
    <property name = "env.prop.file" value = "env.properties"/>
    <!-- Include the environment property file which helps locate
     system shared resources and libraries. -->
    <property file = "${env.prop.file}"/>
    <!-- The path to the documentation.-->
    <property name = "doc.dir" value = "doc"/>

    <!-- BEGIN Checkstyle properties. -->
    <!-- The Checkstyle cache file improves the speed of 
     successive checkstyle runs.-->
    <property name = "cs.cache.file" value = "${build.dir}/cs"/>
    <!-- The properties describing what checkstyle should ignore.-->
    <property name="checkstyle.suppressions.file"
     value="checkstyle-5.7/suppressions.xml"/>
    <!-- The properties describing what checkstyle should ignore.-->
    <property name="checkstyle.config.file"
     value="checkstyle-5.7/contrib/examples/checks/all-checkstyle-checks.xml"/>
    <!-- The level of error. -->
    <property name="translation.severity" value="warning"/>
    <!-- The header file is not used in this case.-->
    <property name="checkstyle.header.file" value=""/>
    <!-- The import control file is not used in this case.-->
    <property name="checkstyle.importcontrol.file" value=""/>
    
    <!-- Sets the class path for Checkstyle's jars.-->
    <path id="cs.classpath">
        <fileset dir="${checkstyle.dir}">
            <include name="checkstyle-*all.jar"/>
        </fileset>
    </path>
    <!-- END Checkstyle properties. -->

    <!-- The prebuild target meets the preconditions of the build.-->
    <target name = "prebuild"
     description = "Meets build preconditions such as creating directories." >
        <mkdir dir = "${source.dir}" />
        <mkdir dir = "${test.dir}" />
    </target>

    <!-- The -build-test-cases target builds test unit classes.-->
    <target name = "-build-test-cases" depends = "prebuild,build">
        <javac srcdir = "${test.dir}"
         destdir = "${target.dir}" debug = "on">
            <classpath>
                <fileset dir = "${junit.jar.path}">
                    <include name = "*.jar"/>
                </fileset>
            </classpath>
        </javac>
    </target>

    <!-- The build target builds source classes.-->
    <target name = "build" depends = "prebuild"
     description = "Builds the sources classes.">
        <mkdir dir = "${target.dir}"/>
        <javac srcdir = "${source.dir}"
         destdir = "${target.dir}" debug = "on">
        </javac>
    </target>

    <!-- The doc target builds the documentation from the sources.-->
    <target name = "doc" depends = "prebuild"
     description = "Builds the documentation from the sources.">
        <mkdir dir = "${doc.dir}"/>
        <javadoc destdir = "${doc.dir}">
            <fileset dir = "${source.dir}" includes = "**/*.java"/>
        </javadoc>
    </target>

    <!-- The -run-tests target executes unit tests
     and writes the test results to a report.-->
    <target name = "-run-tests" depends = "-build-test-cases">
        <!-- Run the unit tests.-->
        <junit printsummary="yes" haltonfailure="false"
         failureproperty = "junit.status.hasfailed">
            
            <classpath>
                <pathelement path="${target.dir}"/>
                <fileset dir = "${junit.jar.path}">
                    <include name = "*.jar"/>
                </fileset>
            </classpath>
            <!-- Generate a plain text report. -->
            <formatter type="plain" usefile="false"/>
            <batchtest>
                <fileset dir="${test.dir}">
                    <include name="*Test*.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

    <!-- The test target is a shortcut to -run-tests.-->
    <target name = "test" depends = "-run-tests"
     description = "Runs the unit tests and outputs the results."/>

    <!-- The clean target removes files generated by running a target.-->
    <target name = "clean"
     description = "Removes files generated by each target.">
        <delete dir = "${build.dir}"/>
        <delete dir = "${doc.dir}"/>
    </target>
    
    <!-- Cites the source for style violations.-->
    <target name = "cs" depends = "prebuild"
     description = "Runs Checkstyle on the source classes.">
        <!-- Defines the checkstyle task.-->
        <taskdef resource="checkstyletask.properties"
         classpathref="cs.classpath"/>
        <!-- Make the required directories.-->
        <mkdir dir = "${build.dir}"/>
        <!-- Run checkstyle.-->
        <checkstyle config="${checkstyle.config.file}"
         failOnViolation = "true">
            <fileset dir="${source.dir}" includes="*.java"/>
            <fileset dir="${test.dir}" includes="*.java"/>
            <property key="checkstyle.cache.file" file="${cs.cache.file}"/>
            <formatter type="plain"/>
        </checkstyle>
    </target>
</project>
